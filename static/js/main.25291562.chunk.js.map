{"version":3,"sources":["storages/types/imageType.tsx","storages/types/text-type.tsx","board.tsx","storages/actions/textAction.tsx","storages/actions/imageAction.tsx","components/modals/basic-modal.tsx","storages/actions/boardAction.tsx","storages/reducers/imageReducer.tsx","storages/reducers/textReducer.tsx","storages/reducers/transformReducer.tsx","storages/reducers/boardReducer.tsx","storages/rootReducers.tsx","storages/store.tsx","layout/header.tsx","modals/crop.tsx","tools/zoom.tsx","tools/tool.tsx","layout/sidebar.tsx","panels/draw/draw-panel.tsx","panels/image/image-setting.tsx","panels/imagePanel.tsx","panels/text/panel-text-edit.tsx","panels/textPanel.tsx","app-router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SET_IMAGE","ADD_IMAGE","UPDATE_TEXT","ADD_TEXT","Board","history","useHistory","shapeRef","useRef","useState","shapeId","setShapeId","trRef","listText","useSelector","state","textReducer","listImage","imageReducer","boardConfig","boardReducer","dispatch","useDispatch","useEffect","current","nodes","getLayer","batchDraw","handleContextMenu","e","evt","preventDefault","handleTextDbClick","type","payload","push","handleImageDbClick","width","height","className","onMouseDown","target","getStage","map","text","index","Fragment","id","ref","draggable","onClick","onContextMenu","onDblClick","visible","image","handleImageClick","BasicModal","props","title","onCanel","style","children","SET_SIZE","initialState","action","textId","find","x","textConfig","node","TransformReducer","BoardReducer","rootReducer","combineReducers","store","createStore","Header","board","visibleNewProject","setVisibleNewProject","setWidth","setHeight","handleNew","console","log","getState","placeholder","onChange","value","Crop","setImage","subscribe","currentSrc","isShowCrop","setIsShowCrop","src","alt","Zoom","zoomPanelVisible","setZoomPanelVisible","zoomPercent","setZoomPercent","setZoom","percent","zoomIn","zoomType","right","hidden","Tool","icon","Item","Sidebar","to","DrawPanel","ImageSetting","brightness","setBrightness","blur","setBlur","min","max","defaultValue","ImagePanel","images","setImages","handleClickImage","img","document","createElement","htmlFor","accept","url","currentTarget","files","list","URL","createObjectURL","toString","PanelTextEdit","setTextConfig","handleChange","newTextConfig","textConfigStore","error","TextPanel","handleTextClick","ownerDocument","defaultView","getComputedStyle","Math","random","substring","innerText","fontFamily","fontSize","Number","match","AppRouter","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25291562.chunk.js","sourcesContent":["export const SELECT_IMAGE = 'SELECT_IMAGE'\r\nexport const GET_IMAGE = 'GET_IMAGE'\r\nexport const SET_IMAGE = 'SET_IMAGE'\r\nexport const ADD_IMAGE = 'add_image'","export const UPDATE_TEXT = \"update_text\";\r\nexport const ADD_TEXT = 'add_text';","import Konva from \"konva\";\r\nimport { ImageConfig } from \"konva/types/shapes/Image\";\r\nimport { TextConfig } from \"konva/types/shapes/Text\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Layer, Stage, Transformer, Text, Image } from \"react-konva\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setImageAction } from \"./storages/actions/imageAction\";\r\nimport { setTextAction } from \"./storages/actions/textAction\";\r\n\r\nexport default function Board() {\r\n    const history = useHistory()\r\n    const shapeRef = useRef<any>(null)\r\n    const [shapeId, setShapeId] = useState<any>()\r\n    const trRef = useRef<any>();\r\n\r\n    const listText = useSelector((state: any) => state.textReducer.listText)\r\n    const listImage = useSelector((state: any) => state.imageReducer.listImage)\r\n    const boardConfig = useSelector((state: any) => state.boardReducer)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (shapeId) {\r\n            // we need to attach transformer manually\r\n            trRef.current.nodes([shapeRef.current]);\r\n            trRef.current.getLayer().batchDraw();\r\n        }\r\n    }, [shapeId]);\r\n\r\n    const handleDeselect = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty) {\r\n            setShapeId(null)\r\n        }\r\n    }\r\n\r\n    const handleContextMenu = (e: any) => {\r\n        e.evt.preventDefault();\r\n    }\r\n\r\n    const handleTextDbClick = () => {\r\n        dispatch(setTextAction(shapeId))\r\n        history.push('/text/edit')\r\n    }\r\n\r\n    function handleImageClick(id: string = '') {\r\n        setShapeId(id)\r\n    }\r\n\r\n    const handleImageDbClick = () => {\r\n        dispatch(setImageAction(shapeId))\r\n        history.push('/image/setting')\r\n    }\r\n\r\n    return (\r\n        <Stage width={boardConfig.width} height={boardConfig.height} className=\"bg-white border border-blue-500\" onMouseDown={handleDeselect}>\r\n            <Layer>\r\n                {\r\n                    listText?.map((text: TextConfig, index: number) => (\r\n                        <React.Fragment key={index}>\r\n                            <Text id={text.id} ref={shapeRef} text={text.text} draggable onClick={() => setShapeId(text.id)} onContextMenu={handleContextMenu} onDblClick={handleTextDbClick} />\r\n                            <Transformer ref={trRef} id={text.id} visible={text.id === shapeId} />\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n                {\r\n                    listImage?.map((image: ImageConfig, index: number) => (\r\n                        <React.Fragment key={index}>\r\n                            <Image image={image.image} ref={shapeRef} draggable onClick={() => handleImageClick(image.id)} onContextMenu={handleContextMenu} onDblClick={handleImageDbClick} />\r\n                            <Transformer visible={image.id === shapeId} ref={trRef}/>\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n            </Layer>\r\n        </Stage>\r\n    )\r\n}","import { TextConfig } from \"konva/types/shapes/Text\"\r\nimport { ADD_TEXT, UPDATE_TEXT } from \"../types/text-type\"\r\n\r\nexport const setTextNode = (payload: any): any => {\r\n    return {\r\n        type: 'SET_TEXT_NODE',\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const setTextAction = (payload: string) => {\r\n    return {\r\n        type: 'SET_TEXT',\r\n        payload\r\n    }\r\n}\r\n\r\nexport const addText = (payload: TextConfig) => {\r\n    return {\r\n        type: ADD_TEXT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateText = (payload: TextConfig) => {\r\n    return {\r\n        type: UPDATE_TEXT,\r\n        payload\r\n    }\r\n}","import { ADD_IMAGE, SET_IMAGE } from \"../types/imageType\"\r\n\r\nexport const addImage = (payload: any) => {\r\n    return {\r\n        type: ADD_IMAGE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setImageAction = (payload: any) => {\r\n    return {\r\n        type: SET_IMAGE,\r\n        payload\r\n    }\r\n}","interface IModalProps {\r\n  visible: boolean;\r\n  onCanel: any;\r\n  title: string;\r\n}\r\n\r\nconst BasicModal: React.FunctionComponent<IModalProps> = (props) => {\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.visible\r\n          ? \"flex justify-center items-center h-screen w-screen absolute top-0 left-0\"\r\n          : \"hidden\"\r\n      }`}\r\n    >\r\n      <div className=\"w-screen h-screen bg-gray-500 opacity-50 absolute z-10 top-0 left-0\"></div>\r\n      <div className=\"h-full md:h-3/4 w-full md:w-1/2 bg-white absolute z-20 rounded shadow-lg\">\r\n        <div className=\"flex justify-between items-center px-3 py-1 text-gray-800\">\r\n          <div className=\"font-bold\">{props.title}</div>\r\n          <button\r\n            className=\"p-2 transition duration-300 ease-in-out transform hover:rotate-90\"\r\n            onClick={props.onCanel}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"h-full\" style={{height: 'calc(100% - 48px)'}}>{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicModal;\r\n","export const SET_SIZE: string = \"set_size\";\r\n\r\nexport const setSize = (payload: any) => {\r\n    return {\r\n        type: SET_SIZE,\r\n        payload\r\n    }\r\n}","import { ADD_IMAGE, SET_IMAGE } from \"../types/imageType\"\r\n\r\nconst initialState = {\r\n    image: null,\r\n    listImage: []\r\n}\r\n\r\nconst imageReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case SET_IMAGE: {\r\n            return {\r\n                ...state,\r\n                image: action.payload\r\n            }\r\n        }\r\n        case ADD_IMAGE: {\r\n            return {\r\n                ...state,\r\n                listImage: [...state.listImage, action.payload]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default imageReducer","import { TextConfig } from \"konva/types/shapes/Text\"\r\nimport { ADD_TEXT, UPDATE_TEXT } from \"../types/text-type\"\r\n\r\nconst initialState: any = {\r\n    textId: '',\r\n    nodes: {},\r\n    listText: []\r\n}\r\n\r\nconst textReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_NODE': {\r\n            return {\r\n                ...state,\r\n                nodes: action.payload\r\n            }\r\n        }\r\n        case 'SET_TEXT': {\r\n            return {\r\n                ...state,\r\n                textId: action.payload\r\n            }\r\n        }\r\n        case ADD_TEXT: {\r\n            return {\r\n                ...state,\r\n                listText: [...state.listText, action.payload]\r\n            }\r\n        }\r\n        case UPDATE_TEXT: {\r\n            state.listText.find((x: TextConfig) => x.id === action.payload.id).text = action.payload.text;\r\n            return {\r\n                ...state,\r\n                listText: state.listText.map((textConfig: TextConfig) => textConfig.id === action.payload.id ? textConfig = action.payload : textConfig)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default textReducer","const initialState = {\r\n    node: {}\r\n}\r\n\r\nconst TransformReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case 'SET_TRANSFORM_NODE': {\r\n            return {\r\n                ...state,\r\n                node: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default TransformReducer","import { SET_SIZE } from \"../actions/boardAction\";\r\n\r\nconst initialState = {\r\n    width: 500,\r\n    height: 500\r\n}\r\n\r\nconst BoardReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case SET_SIZE: \r\n            return {\r\n                ...state,\r\n                width: action.payload.width,\r\n                height: action.payload.height\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default BoardReducer","import { combineReducers } from \"redux\";\r\nimport imageReducer from \"./reducers/imageReducer\";\r\nimport textReducer from \"./reducers/textReducer\";\r\nimport TransformReducer from \"./reducers/transformReducer\";\r\nimport boardReducer from \"./reducers/boardReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    boardReducer,\r\n    imageReducer,\r\n    textReducer,\r\n    TransformReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducers\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BasicModal from \"../components/modals/basic-modal\";\r\nimport { setSize } from \"../storages/actions/boardAction\";\r\nimport store from \"../storages/store\";\r\n\r\nexport default function Header() {\r\n\r\n  const dispatch = useDispatch()\r\n  const board = useSelector((state: any) => state.boardReducer)\r\n\r\n  const [visibleNewProject, setVisibleNewProject] = useState(false)\r\n  const [width, setWidth] = useState(board.width)\r\n  const [height, setHeight] = useState(board.height)\r\n\r\n  const handlePreview = () => {\r\n    console.log(store.getState());\r\n  };\r\n\r\n  const handleNew = () => {\r\n    dispatch(setSize({width, height}))\r\n    setVisibleNewProject(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"border-b bg-white flex items-center\">\r\n        <div className=\"px-4 py-3 flex-grow\">\r\n          <button type=\"button\" className=\"px-2\">\r\n            <i className=\"fas fa-bars\"></i>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-2 font-medium hover:text-blue-700\"\r\n            onClick={() => setVisibleNewProject(true)}\r\n          >\r\n            New Design\r\n          </button>\r\n        </div>\r\n        <div className=\"px-2\">\r\n          <button\r\n            className=\"px-4 py-1 rounded bg-blue-500 hover:bg-blue-600 text-white font-bold\"\r\n            onClick={handlePreview}\r\n          >\r\n            <i className=\"fas fa-eye mr-2\"></i>Preview\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <BasicModal title=\"Start new design\" visible={visibleNewProject} onCanel={() => setVisibleNewProject(false)}>\r\n        <div className=\"md:flex md:h-full border-t\">\r\n          <div className=\"md:w-1/4 bg-gray-100 h-full rounded-bl\">\r\n            <div className=\"py-2 px-3 hover:bg-gray-200 font-medium cursor-pointer\"><i className=\"fas fa-award mr-2\"></i>Recommendation</div>\r\n            <div className=\"py-2 px-3 hover:bg-blue-200 font-medium cursor-pointer\"><i className=\"fab fa-facebook text-blue-600 mr-2\"></i>Facebook</div>\r\n            <div className=\"py-2 px-3 hover:bg-purple-200 font-medium cursor-pointer\"><i className=\"fab fa-instagram text-purple-600 mr-2\"></i>Instagram</div>\r\n            <div className=\"py-2 px-3 hover:bg-red-200 font-medium cursor-pointer\"><i className=\"fab fa-accusoft text-red-600 mr-2\"></i>Custom</div>\r\n          </div>\r\n          <div className=\"md:w-3/4 h-full\">\r\n            <div className=\"p-4\">\r\n              <div className=\"mb-3 md:flex items-center justify-center\">\r\n                <input type=\"number\" className=\"px-4 py-2 border rounded w-full\" placeholder=\"Width\" onChange={(e) => setWidth(e.target.value)} />\r\n                <div className=\"px-2 text-center\">x</div>\r\n                <input type=\"number\" className=\"px-4 py-2 border rounded w-full\" placeholder=\"Height\" onChange={(e) => setHeight(e.target.value)} />\r\n              </div>\r\n              <div></div>\r\n              <div className=\"p-2 text-right\">\r\n                <button className=\"px-6 py-2 bg-blue-500 text-white font-medium rounded hover:bg-blue-600\" onClick={() => handleNew()}><i className=\"fas fa-plus mr-2\"></i>Create</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </BasicModal>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\"\r\nimport store from \"../storages/store\"\r\n\r\nexport default function Crop(props: any) {\r\n\r\n    const [image, setImage] = useState('')\r\n\r\n    function handleUndo() {\r\n\r\n    }\r\n\r\n    store.subscribe(() => {\r\n        if (!store.getState().imageReducer.image) {\r\n            return;\r\n        }\r\n        setImage(store.getState().imageReducer.image.currentSrc)\r\n    })\r\n\r\n    return (\r\n        <div className={`${props.isShowCrop ? 'flex justify-center items-center h-screen w-screen absolute top-0 left-0' : 'hidden'}`}>\r\n            <div className=\"w-screen h-screen bg-gray-500 opacity-50 absolute z-10 top-0 left-0\"></div>\r\n            <div className=\"h-3/4 w-1/2 bg-white absolute z-20 rounded shadow-lg\">\r\n                <div className=\"flex justify-between items-center px-3 pt-2 text-gray-600\">\r\n                    <div className=\"font-bold\">\r\n                        CROP IMAGE\r\n                    </div>\r\n                    <button className=\"p-2 transition duration-300 ease-in-out transform hover:rotate-90\" onClick={() => props.setIsShowCrop(false)}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"px-2 h-full\">\r\n                    <div className=\"border border-gray-200 rounded\" style={{ height: 'calc(100% - 150px)' }}>\r\n                        <div className=\"bg-gray-100 rounded p-2 text-sm text-gray-600\">\r\n                            <button onClick={() => handleUndo()}><i className=\"fas fa-undo px-2\"></i></button>\r\n                            <button><i className=\"fas fa-redo px-2\"></i></button>\r\n                        </div>\r\n                        <div className=\"p-4 flex justify-center\" style={{height: 'calc(100% - 36px)'}}>\r\n                            { <img src={image} alt=\"\"/> }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-4\">\r\n                        <button className=\"text-gray-600 rounded font-medium px-6 py-2 mr-2 hover:text-gray-700\" onClick={() => props.setIsShowCrop(false)}>Cancel</button>\r\n                        <button className=\"bg-blue-500 text-white rounded font-medium px-6 py-2 hover:bg-blue-600\"><i className=\"fas fa-crop\"></i> Crop</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\n\r\nconst Zoom = () => {\r\n    const [zoomPanelVisible, setZoomPanelVisible] = useState(true)\r\n    const [zoomPercent, setZoomPercent] = useState(100)\r\n\r\n    function setZoom(percent:number) {\r\n        setZoomPercent(percent)\r\n        setZoomPanelVisible(true)\r\n    }\r\n\r\n    function zoomIn(zoomType:boolean) {\r\n        if (zoomType) {\r\n            setZoomPercent(zoomPercent + 10)\r\n        } else {\r\n            setZoomPercent(zoomPercent - 10)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex text-sm\">\r\n            <div className=\"px-2 py-3 text-gray-400 cursor-pointer hover:text-blue-500\" onClick={() => zoomIn(false)}>\r\n                <i className=\"fas fa-search-minus\"></i>\r\n            </div>\r\n            <div className=\"px-2 py-3 font-medium text-gray-700 cursor-pointer relative\">\r\n                <div onClick={() => setZoomPanelVisible(!zoomPanelVisible)}>{zoomPercent}%</div>\r\n                <div className=\"absolute bg-white mt-1 rounded\" style={{right: -10}} hidden={zoomPanelVisible}>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(50)}>50%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(75)}>75%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(100)}>100%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(125)}>125%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(150)}>150%</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"px-2 py-3 text-gray-400 cursor-pointer hover:text-blue-500\" onClick={() => zoomIn(true)}>\r\n                <i className=\"fas fa-search-plus\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Zoom","import { useState } from \"react\"\r\nimport Crop from \"../modals/crop\"\r\nimport Zoom from \"./zoom\"\r\n\r\nexport default function Tool() {\r\n\r\n    const [isShowCrop, setIsShowCrop] = useState(false)\r\n\r\n    const handleCropClick = () => {\r\n        setIsShowCrop(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Crop isShowCrop={isShowCrop} setIsShowCrop={setIsShowCrop}/>\r\n            <div className=\"flex text-gray-700\">\r\n                <div className=\"flex text-sm flex-grow\">\r\n                    <Item icon=\"fas fa-undo\" />\r\n                    <Item icon=\"fas fa-redo\" />\r\n                    <div className=\"pl-4 py-3 text-gray-600 hover:text-gray-700 cursor-pointer\" onClick={handleCropClick}>\r\n                        <i className=\"fas fa-crop\"></i>\r\n                    </div>\r\n                    <Item icon=\"fas fa-fill-drip\" />\r\n                </div>\r\n                <Zoom/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Item = (props: any) => {\r\n    return (\r\n        <div className=\"pl-4 py-3 text-gray-400\">\r\n            <i className={props.icon}></i>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div>\r\n            <div className=\"bg-gray-800 w-16 h-full flex-col\">\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <Link to=\"/\"><i className=\"fas fa-image text-2xl\"></i></Link>\r\n                </div>\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <Link to=\"/draw\"><i className=\"fas fa-disease text-2xl\"></i></Link>\r\n                </div>\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <i className=\"fas fa-paragraph text-2xl\"></i>\r\n                </div>\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <Link to=\"/text\"><i className=\"fab fa-autoprefixer text-2xl\"></i></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const DrawPanel = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default DrawPanel","import { useState } from \"react\"\r\n\r\nexport default function ImageSetting() {\r\n\r\n    const [brightness, setBrightness] = useState(0)\r\n    const [blur, setBlur] = useState(0)\r\n\r\n    function handleBlur(value: number) {\r\n        setBlur(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold mb-3 text-lg\">Image</div>\r\n            <div className=\"mb-2\">Brightness</div>\r\n            <div className=\"w-full flex items-center\">\r\n                <input type=\"range\" min=\"-100\" max=\"100\" defaultValue={brightness} className=\"flex-grow mr-2\" onChange={(e: any) => setBrightness(e.target.value)} />\r\n                <input type=\"text\" className=\"p-1 w-12 bg-gray-100 rounded text-center\" value={brightness} />\r\n            </div>\r\n            <div className=\"mb-2\">Blur</div>\r\n            <div className=\"w-full flex items-center\">\r\n                <input type=\"range\" min=\"0\" max=\"100\" defaultValue={blur} className=\"flex-grow mr-2\" onChange={(e: any) => handleBlur(e.target.value)} />\r\n                <input type=\"text\" className=\"p-1 w-12 bg-gray-100 rounded text-center\" value={blur} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ImageConfig } from \"konva/types/shapes/Image\"\r\nimport { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { addImage } from \"../storages/actions/imageAction\"\r\n\r\nexport default function ImagePanel() {\r\n\r\n    const [images, setImages] = useState<string[]>([])\r\n    const dispatch = useDispatch()\r\n\r\n    const handleUpload = (e: any) => {\r\n        let url = e.currentTarget.files[0]\r\n        let list = [...images, URL.createObjectURL(url)]\r\n        setImages(list)\r\n    }\r\n\r\n    const handleClickImage = (value: any, id: string) => {\r\n        var img = document.createElement('img');\r\n        img.src = value;\r\n        let imageConfig: ImageConfig = {\r\n            image: img,\r\n            id: id\r\n        }\r\n        dispatch(addImage(imageConfig))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold text-xl text-gray-700 mb-3\">Photo</div>\r\n            <label className=\"bg-blue-500 text-white block p-2 text-center font-bold cursor-pointer hover:bg-blue-600 shadow rounded\" htmlFor=\"image\">\r\n                <input type=\"file\" hidden accept=\"image/*\" id=\"image\" onChange={handleUpload} />\r\n                <i className=\"fas fa-cloud-upload-alt mr-2\"></i> Upload\r\n            </label>\r\n            <div className=\"overflow-auto mt-1\" style={{ height: 'calc(100vh - 150px)' }}>\r\n                {\r\n                    images?.map((value, index) => (\r\n                        <button className=\"mb-2 bg-gray-900\" key={index}>\r\n                            <img src={value} alt=\"img\" onClick={() => handleClickImage(value, index.toString())} className=\"transition duration-700 hover:opacity-75\"/>\r\n                        </button>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { TextConfig } from \"konva/types/shapes/Text\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { updateText } from \"../../storages/actions/textAction\"\r\n\r\nconst PanelTextEdit = () => {\r\n\r\n    const [textConfig, setTextConfig] = useState<TextConfig>()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const textId = useSelector((state: any) => state.textReducer.textId)\r\n    const listText = useSelector((state: any) => state.textReducer.listText)\r\n\r\n    useEffect(() => {\r\n        const textConfigStore = listText.find((x: TextConfig) => x.id === textId);\r\n        if (textConfigStore) {\r\n            setTextConfig(textConfigStore)\r\n        } else {\r\n            console.error('text config not found!!!')\r\n        }\r\n    }, [listText, textId])\r\n\r\n    function handleChange(value: string) {\r\n        let newTextConfig = {...textConfig}\r\n        newTextConfig.text = value\r\n        dispatch(updateText(newTextConfig))\r\n    }\r\n\r\n    function handleSave() {\r\n        history.push(`/text`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-2 font-medium\">Text</div>\r\n            <input type=\"text\" className=\"px-4 py-2 bg-gray-100 w-full mb-3 rounded\" defaultValue={textConfig?.text} onChange={(e: any) => handleChange(e.target.value)} />\r\n            <div className=\"mb-2 font-medium\">Font style</div>\r\n            <div className=\"mb-4 text-sm\">\r\n                <div className=\"flex justify-between items-center\">\r\n                <label className=\"mr-2 font-bold\"><input type=\"checkbox\" /> Bold</label>\r\n                <label className=\"mr-2 italic\"><input type=\"checkbox\" /> Italic</label>\r\n                <label className=\"mr-2 underline\"><input type=\"checkbox\" /> Underline</label>\r\n                </div>\r\n            </div>\r\n            <button className=\"px-6 py-2 bg-blue-500 text-white rounded font-medium\" onClick={() => handleSave()}><i className=\"fas fa-save mr-2\"></i>Save</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PanelTextEdit","import { addText } from \"../storages/actions/textAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TextConfig } from \"konva/types/shapes/Text\";\r\n\r\nconst TextPanel = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleTextClick = (e: any) => {\r\n        let style = e.target.ownerDocument.defaultView.getComputedStyle(e.target, null);\r\n        let text: TextConfig = {\r\n            id: Math.random().toString(36).substring(7),\r\n            text: e.target.innerText,\r\n            fontFamily: style.fontFamily,\r\n            fontSize: Number(style.fontSize.match(/\\d+/)[0])\r\n        }\r\n        dispatch(addText(text))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold text-xl text-gray-700 mb-3\">Text</div>\r\n            <div className=\"p-2 text-xl\">\r\n                <div className=\"mb-2\">\r\n                    <button className=\"font-bold\" onClick={handleTextClick}>Bold</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button className=\"font-bold italic\" onClick={handleTextClick}>Bold Italic</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button onClick={handleTextClick}>Normal</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button onClick={handleTextClick} className=\"italic\">Normal Italic</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextPanel","import { Route, Switch } from \"react-router-dom\";\r\nimport DrawPanel from \"./panels/draw/draw-panel\";\r\nimport ImageSetting from \"./panels/image/image-setting\";\r\nimport ImagePanel from \"./panels/imagePanel\";\r\nimport PanelTextEdit from \"./panels/text/panel-text-edit\";\r\nimport TextPanel from \"./panels/textPanel\";\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/draw\">\r\n                <DrawPanel />\r\n            </Route>\r\n            <Route exact path=\"/image/setting\">\r\n                <ImageSetting />\r\n            </Route>\r\n            <Route exact path=\"/text/edit\">\r\n                <PanelTextEdit />\r\n            </Route>\r\n            <Route exact path=\"/text\">\r\n                <TextPanel />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n                <ImagePanel />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}","import Board from './board';\r\nimport Header from './layout/header';\r\nimport Tool from './tools/tool';\r\nimport './style.css';\r\nimport Sidebar from './layout/sidebar';\r\nimport AppRouter from './app-router';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"bg-gray-100 h-full\">\r\n      <Header />\r\n      <div className=\"flex\" style={{ height: 'calc(100vh - 49px)' }}>\r\n        <Sidebar/>\r\n        <div className=\"w-72 border-r bg-white p-3\">\r\n          <AppRouter />\r\n        </div>\r\n        <div className=\"flex-grow\">\r\n          <Tool />\r\n          <div className=\"flex items-center justify-center\" style={{ height: 'calc(100% - 48px)' }}>\r\n            <Board />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport rootReducer from './storages/rootReducers';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}