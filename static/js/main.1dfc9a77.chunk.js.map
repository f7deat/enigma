{"version":3,"sources":["storages/types/text-type.tsx","board.tsx","storages/actions/textAction.tsx","components/modals/basic-modal.tsx","storages/types/imageType.tsx","storages/reducers/imageReducer.tsx","storages/reducers/textReducer.tsx","storages/reducers/transformReducer.tsx","storages/rootReducers.tsx","storages/store.tsx","layout/header.tsx","modals/crop.tsx","tools/zoom.tsx","tools/tool.tsx","panels/imagePanel.tsx","storages/actions/imageAction.tsx","panels/textPanel.tsx","layout/sidebar.tsx","panels/text/panel-text-edit.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UPDATE_TEXT","ADD_TEXT","Board","history","useHistory","shapeRef","useRef","useState","shapeId","setShapeId","trRef","listText","useSelector","state","textReducer","dispatch","useDispatch","useEffect","current","nodes","getLayer","batchDraw","handleContextMenu","e","evt","preventDefault","handleTextDbClick","push","type","payload","console","log","width","height","className","onMouseDown","target","getStage","map","text","index","Fragment","id","ref","draggable","onClick","onContextMenu","onDblClick","visible","BasicModal","props","title","onCanel","style","children","SET_IMAGE","initialState","image","imageReducer","action","textId","find","x","textConfig","node","TransformReducer","rootReducer","combineReducers","store","createStore","Header","visibleNewProject","setVisibleNewProject","getState","Crop","setImage","subscribe","currentSrc","isShowCrop","setIsShowCrop","src","alt","Zoom","zoomPanelVisible","setZoomPanelVisible","zoomPercent","setZoomPercent","setZoom","percent","zoomIn","zoomType","right","hidden","Tool","icon","Item","ImagePanel","images","setImages","handleClickImage","file","currentTarget","htmlFor","accept","onChange","url","files","list","URL","createObjectURL","value","Math","floor","random","TextPanel","handleTextClick","ownerDocument","defaultView","getComputedStyle","toString","substring","innerText","fontFamily","fontSize","Number","match","Sidebar","to","PanelTextEdit","setTextConfig","handleChange","newTextConfig","textConfigStore","error","defaultValue","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dfc9a77.chunk.js","sourcesContent":["export const UPDATE_TEXT = \"update_text\";\r\nexport const ADD_TEXT = 'add_text';","import Konva from \"konva\";\r\nimport { TextConfig } from \"konva/types/shapes/Text\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Layer, Stage, Transformer, Text } from \"react-konva\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setTextAction } from \"./storages/actions/textAction\";\r\n\r\nexport default function Board() {\r\n    const history = useHistory()\r\n    const shapeRef = useRef<any>(null)\r\n    const [shapeId, setShapeId] = useState<any>()\r\n    const trRef = useRef<any>();\r\n    const listText = useSelector((state: any) => state.textReducer.listText)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (shapeId) {\r\n          // we need to attach transformer manually\r\n          trRef.current.nodes([shapeRef.current]);\r\n          trRef.current.getLayer().batchDraw();\r\n        }\r\n      }, [shapeId]);\r\n\r\n    const handleDeselect = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty) {\r\n            setShapeId(null)\r\n          }\r\n    }\r\n\r\n    const handleContextMenu = (e: any) => {\r\n        e.evt.preventDefault();\r\n        // Destroy Shape\r\n        //e.target.destroy()\r\n    }\r\n\r\n    const handleTextDbClick = () => {\r\n        history.push('/text/edit')\r\n        dispatch(setTextAction(shapeId))\r\n        console.log(shapeId)\r\n    }\r\n\r\n    return (\r\n        <Stage width={500} height={500} className=\"bg-white border border-blue-500\" onMouseDown={handleDeselect}>\r\n            <Layer>\r\n                {\r\n                    listText && listText.map((text: TextConfig, index: number) => (\r\n                        <React.Fragment key={index}>\r\n                            <Text id={text.id} ref={shapeRef} text={text.text} draggable onClick={() => setShapeId(text.id)} onContextMenu={handleContextMenu} onDblClick={handleTextDbClick}/>\r\n                            <Transformer ref={trRef} id={text.id} visible={text.id === shapeId}/>\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n            </Layer>\r\n        </Stage>\r\n    )\r\n}","import { TextConfig } from \"konva/types/shapes/Text\"\r\nimport { ADD_TEXT, UPDATE_TEXT } from \"../types/text-type\"\r\n\r\nexport const setTextNode = (payload: any): any => {\r\n    return {\r\n        type: 'SET_TEXT_NODE',\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const setTextAction = (payload: string) => {\r\n    return {\r\n        type: 'SET_TEXT',\r\n        payload\r\n    }\r\n}\r\n\r\nexport const addText = (payload: TextConfig) => {\r\n    return {\r\n        type: ADD_TEXT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateText = (payload: TextConfig) => {\r\n    return {\r\n        type: UPDATE_TEXT,\r\n        payload\r\n    }\r\n}","interface IModalProps {\r\n  visible: boolean;\r\n  onCanel: any;\r\n  title: string;\r\n}\r\n\r\nconst BasicModal: React.FunctionComponent<IModalProps> = (props) => {\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.visible\r\n          ? \"flex justify-center items-center h-screen w-screen absolute top-0 left-0\"\r\n          : \"hidden\"\r\n      }`}\r\n    >\r\n      <div className=\"w-screen h-screen bg-gray-500 opacity-50 absolute z-10 top-0 left-0\"></div>\r\n      <div className=\"h-3/4 w-1/2 bg-white absolute z-20 rounded shadow-lg\">\r\n        <div className=\"flex justify-between items-center px-3 py-1 text-gray-800\">\r\n          <div className=\"font-bold\">{props.title}</div>\r\n          <button\r\n            className=\"p-2 transition duration-300 ease-in-out transform hover:rotate-90\"\r\n            onClick={props.onCanel}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"h-full\" style={{height: 'calc(100% - 48px)'}}>{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicModal;\r\n","export const SELECT_IMAGE = 'SELECT_IMAGE'\r\nexport const GET_IMAGE = 'GET_IMAGE'\r\nexport const SET_IMAGE = 'SET_IMAGE'\r\n\r\nexport interface ImageAction {\r\n    type: typeof SET_IMAGE,\r\n    payload: string\r\n}","import { ImageAction, SET_IMAGE } from \"../types/imageType\"\r\n\r\nconst initialState = {\r\n    image: null\r\n}\r\n\r\nconst imageReducer = (state = initialState, action: ImageAction): any => {\r\n    switch (action.type) {\r\n        case SET_IMAGE: {\r\n            return {\r\n                ...state,\r\n                image: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default imageReducer","import { TextConfig } from \"konva/types/shapes/Text\"\r\nimport { ADD_TEXT, UPDATE_TEXT } from \"../types/text-type\"\r\n\r\nconst initialState: any = {\r\n    textId: '',\r\n    nodes: {},\r\n    listText: []\r\n}\r\n\r\nconst textReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_NODE': {\r\n            return {\r\n                ...state,\r\n                nodes: action.payload\r\n            }\r\n        }\r\n        case 'SET_TEXT': {\r\n            return {\r\n                ...state,\r\n                textId: action.payload\r\n            }\r\n        }\r\n        case ADD_TEXT: {\r\n            return {\r\n                ...state,\r\n                listText: [...state.listText, action.payload]\r\n            }\r\n        }\r\n        case UPDATE_TEXT: {\r\n            state.listText.find((x: TextConfig) => x.id === action.payload.id).text = action.payload.text;\r\n            return {\r\n                ...state,\r\n                listText: state.listText.map((textConfig: TextConfig) => textConfig.id === action.payload.id ? textConfig = action.payload : textConfig)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default textReducer","const initialState = {\r\n    node: {}\r\n}\r\n\r\nconst TransformReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case 'SET_TRANSFORM_NODE': {\r\n            return {\r\n                ...state,\r\n                node: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default TransformReducer","import { combineReducers } from \"redux\";\r\nimport imageReducer from \"./reducers/imageReducer\";\r\nimport textReducer from \"./reducers/textReducer\";\r\nimport TransformReducer from \"./reducers/transformReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    imageReducer,\r\n    textReducer,\r\n    TransformReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducers\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import { useState } from \"react\";\r\nimport BasicModal from \"../components/modals/basic-modal\";\r\nimport store from \"../storages/store\";\r\n\r\nexport default function Header() {\r\n    const [visibleNewProject, setVisibleNewProject] = useState(false)\r\n    const handlePreview = () => {\r\n    console.log(store.getState());\r\n    };\r\n  return (\r\n    <div>\r\n      <div className=\"border-b bg-white flex items-center\">\r\n        <div className=\"px-4 py-3 flex-grow\">\r\n          <button type=\"button\" className=\"px-2\">\r\n            <i className=\"fas fa-bars\"></i>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-2 font-medium hover:text-blue-700\"\r\n            onClick={() => setVisibleNewProject(true)}\r\n          >\r\n            New Design\r\n          </button>\r\n        </div>\r\n        <div className=\"px-2\">\r\n          <button\r\n            className=\"px-4 py-1 rounded bg-blue-500 hover:bg-blue-600 text-white font-bold\"\r\n            onClick={handlePreview}\r\n          >\r\n            <i className=\"fas fa-eye mr-2\"></i>Preview\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <BasicModal title=\"Start new design\" visible={visibleNewProject} onCanel={() => setVisibleNewProject(false)}>\r\n          <div className=\"flex h-full border-t\">\r\n              <div className=\"w-1/4 bg-gray-100 h-full\">\r\n                  <div className=\"py-2 px-3 hover:bg-gray-200 font-medium cursor-pointer\"><i className=\"fas fa-award mr-2\"></i>Recommendation</div>\r\n                  <div className=\"py-2 px-3 hover:bg-blue-200 font-medium cursor-pointer\"><i className=\"fab fa-facebook text-blue-600 mr-2\"></i>Facebook</div>\r\n                  <div className=\"py-2 px-3 hover:bg-purple-200 font-medium cursor-pointer\"><i className=\"fab fa-instagram text-purple-600 mr-2\"></i>Instagram</div>\r\n                  <div className=\"py-2 px-3 hover:bg-red-200 font-medium cursor-pointer\"><i className=\"fab fa-accusoft text-red-600 mr-2\"></i>Custom</div>\r\n              </div>\r\n              <div className=\"w-3/4 h-full\"></div>\r\n          </div>\r\n      </BasicModal>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\"\r\nimport store from \"../storages/store\"\r\n\r\nexport default function Crop(props: any) {\r\n\r\n    const [image, setImage] = useState('')\r\n\r\n    function handleUndo() {\r\n\r\n    }\r\n\r\n    store.subscribe(() => {\r\n        if (!store.getState().imageReducer.image) {\r\n            return;\r\n        }\r\n        setImage(store.getState().imageReducer.image.currentSrc)\r\n    })\r\n\r\n    return (\r\n        <div className={`${props.isShowCrop ? 'flex justify-center items-center h-screen w-screen absolute top-0 left-0' : 'hidden'}`}>\r\n            <div className=\"w-screen h-screen bg-gray-500 opacity-50 absolute z-10 top-0 left-0\"></div>\r\n            <div className=\"h-3/4 w-1/2 bg-white absolute z-20 rounded shadow-lg\">\r\n                <div className=\"flex justify-between items-center px-3 pt-2 text-gray-600\">\r\n                    <div className=\"font-bold\">\r\n                        CROP IMAGE\r\n                    </div>\r\n                    <button className=\"p-2 transition duration-300 ease-in-out transform hover:rotate-90\" onClick={() => props.setIsShowCrop(false)}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"px-2 h-full\">\r\n                    <div className=\"border border-gray-200 rounded\" style={{ height: 'calc(100% - 150px)' }}>\r\n                        <div className=\"bg-gray-100 rounded p-2 text-sm text-gray-600\">\r\n                            <button onClick={() => handleUndo()}><i className=\"fas fa-undo px-2\"></i></button>\r\n                            <button><i className=\"fas fa-redo px-2\"></i></button>\r\n                        </div>\r\n                        <div className=\"p-4 flex justify-center\" style={{height: 'calc(100% - 36px)'}}>\r\n                            { <img src={image} alt=\"\"/> }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-4\">\r\n                        <button className=\"text-gray-600 rounded font-medium px-6 py-2 mr-2 hover:text-gray-700\" onClick={() => props.setIsShowCrop(false)}>Cancel</button>\r\n                        <button className=\"bg-blue-500 text-white rounded font-medium px-6 py-2 hover:bg-blue-600\"><i className=\"fas fa-crop\"></i> Crop</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\n\r\nconst Zoom = () => {\r\n    const [zoomPanelVisible, setZoomPanelVisible] = useState(true)\r\n    const [zoomPercent, setZoomPercent] = useState(100)\r\n\r\n    function setZoom(percent:number) {\r\n        setZoomPercent(percent)\r\n        setZoomPanelVisible(true)\r\n    }\r\n\r\n    function zoomIn(zoomType:boolean) {\r\n        if (zoomType) {\r\n            setZoomPercent(zoomPercent + 10)\r\n        } else {\r\n            setZoomPercent(zoomPercent - 10)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex text-sm\">\r\n            <div className=\"px-2 py-3 text-gray-400 cursor-pointer hover:text-blue-500\" onClick={() => zoomIn(false)}>\r\n                <i className=\"fas fa-search-minus\"></i>\r\n            </div>\r\n            <div className=\"px-2 py-3 font-medium text-gray-700 cursor-pointer relative\">\r\n                <div onClick={() => setZoomPanelVisible(!zoomPanelVisible)}>{zoomPercent}%</div>\r\n                <div className=\"absolute bg-white mt-1 rounded\" style={{right: -10}} hidden={zoomPanelVisible}>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(50)}>50%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(75)}>75%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(100)}>100%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(125)}>125%</div>\r\n                    <div className=\"px-4 py-2 hover:text-blue-500\" onClick={() => setZoom(150)}>150%</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"px-2 py-3 text-gray-400 cursor-pointer hover:text-blue-500\" onClick={() => zoomIn(true)}>\r\n                <i className=\"fas fa-search-plus\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Zoom","import { useState } from \"react\"\r\nimport Crop from \"../modals/crop\"\r\nimport Zoom from \"./zoom\"\r\n\r\nexport default function Tool() {\r\n\r\n    const [isShowCrop, setIsShowCrop] = useState(false)\r\n\r\n    const handleCropClick = () => {\r\n        setIsShowCrop(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Crop isShowCrop={isShowCrop} setIsShowCrop={setIsShowCrop}/>\r\n            <div className=\"flex text-gray-700\">\r\n                <div className=\"flex text-sm flex-grow\">\r\n                    <Item icon=\"fas fa-undo\" />\r\n                    <Item icon=\"fas fa-redo\" />\r\n                    <div className=\"pl-4 py-3 text-gray-600 hover:text-gray-700 cursor-pointer\" onClick={handleCropClick}>\r\n                        <i className=\"fas fa-crop\"></i>\r\n                    </div>\r\n                    <Item icon=\"fas fa-fill-drip\" />\r\n                </div>\r\n                <Zoom/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Item = (props: any) => {\r\n    return (\r\n        <div className=\"pl-4 py-3 text-gray-400\">\r\n            <i className={props.icon}></i>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { setImageStore } from \"../storages/actions/imageAction\"\r\nimport store from \"../storages/store\"\r\n\r\nexport default function ImagePanel() {\r\n\r\n    const [images, setImages] = useState<string[]>([])\r\n\r\n    const handleUpload = (e: any) => {\r\n        let url = e.currentTarget.files[0]\r\n        let list = [...images, URL.createObjectURL(url)]\r\n        setImages(list)\r\n    }\r\n\r\n    const handleClickImage = (e: any) => {\r\n        store.dispatch(setImageStore(e.currentTarget))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold text-xl text-gray-700 mb-3\">Photo</div>\r\n            <label className=\"bg-blue-500 text-white block p-2 text-center font-bold cursor-pointer hover:bg-blue-600 shadow rounded\" htmlFor=\"image\">\r\n                <input type=\"file\" hidden accept=\"image/*\" id=\"image\" onChange={handleUpload} />\r\n                <i className=\"fas fa-cloud-upload-alt mr-2\"></i> Upload\r\n            </label>\r\n            <div className=\"overflow-auto mt-1\" style={{height: 'calc(100vh - 150px)'}}>\r\n            {\r\n                images && (\r\n                    images.map((value) => (\r\n                        <div className=\"mb-2\" key={Math.floor(Math.random() * 100)}>\r\n                            <img src={value} alt=\"\" onClick={handleClickImage}/>\r\n                        </div>\r\n                    ))\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ImageAction, SET_IMAGE } from \"../types/imageType\"\r\n\r\nexport const setImageStore = (file: any): ImageAction => {\r\n    return {\r\n        type: SET_IMAGE,\r\n        payload: file\r\n    }\r\n}","import { addText } from \"../storages/actions/textAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TextConfig } from \"konva/types/shapes/Text\";\r\n\r\nconst TextPanel = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleTextClick = (e: any) => {\r\n        let style = e.target.ownerDocument.defaultView.getComputedStyle(e.target, null);\r\n        let text: TextConfig = {\r\n            id: Math.random().toString(36).substring(7),\r\n            text: e.target.innerText,\r\n            fontFamily: style.fontFamily,\r\n            fontSize: Number(style.fontSize.match(/\\d+/)[0])\r\n        }\r\n        dispatch(addText(text))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold text-xl text-gray-700 mb-3\">Text</div>\r\n            <div className=\"p-2 text-xl\">\r\n                <div className=\"mb-2\">\r\n                    <button className=\"font-bold\" onClick={handleTextClick}>Bold</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button className=\"font-bold italic\" onClick={handleTextClick}>Bold Italic</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button onClick={handleTextClick}>Normal</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button onClick={handleTextClick} className=\"italic\">Normal Italic</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextPanel","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div>\r\n            <div className=\"bg-gray-800 w-16 h-full flex-col\">\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <Link to=\"/\"><i className=\"fas fa-image text-2xl\"></i></Link>\r\n                </div>\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <i className=\"fas fa-disease text-2xl\"></i>\r\n                </div>\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <i className=\"fas fa-paragraph text-2xl\"></i>\r\n                </div>\r\n                <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\r\n                    <Link to=\"/text\"><i className=\"fab fa-autoprefixer text-2xl\"></i></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { TextConfig } from \"konva/types/shapes/Text\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { updateText } from \"../../storages/actions/textAction\"\r\n\r\nconst PanelTextEdit = () => {\r\n\r\n    const [textConfig, setTextConfig] = useState<TextConfig>()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const textId = useSelector((state: any) => state.textReducer.textId)\r\n    const listText = useSelector((state: any) => state.textReducer.listText)\r\n\r\n    useEffect(() => {\r\n        const textConfigStore = listText.find((x: TextConfig) => x.id === textId);\r\n        if (textConfigStore) {\r\n            setTextConfig(textConfigStore)\r\n        } else {\r\n            console.error('text config not found!!!')\r\n        }\r\n    }, [listText, textId])\r\n\r\n    function handleChange(value: string) {\r\n        let newTextConfig = {...textConfig}\r\n        newTextConfig.text = value\r\n        dispatch(updateText(newTextConfig))\r\n    }\r\n\r\n    function handleSave() {\r\n        history.push(`/text`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-2 font-medium\">Text</div>\r\n            <input type=\"text\" className=\"px-4 py-2 bg-gray-100 w-full mb-3 rounded\" defaultValue={textConfig?.text} onChange={(e: any) => handleChange(e.target.value)} />\r\n            <div className=\"mb-2 font-medium\">Font style</div>\r\n            <div className=\"mb-4 text-sm\">\r\n                <div className=\"flex justify-between items-center\">\r\n                <label className=\"mr-2 font-bold\"><input type=\"checkbox\" /> Bold</label>\r\n                <label className=\"mr-2 italic\"><input type=\"checkbox\" /> Italic</label>\r\n                <label className=\"mr-2 underline\"><input type=\"checkbox\" /> Underline</label>\r\n                </div>\r\n            </div>\r\n            <button className=\"px-6 py-2 bg-blue-500 text-white rounded font-medium\" onClick={() => handleSave()}><i className=\"fas fa-save mr-2\"></i>Save</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PanelTextEdit","import Board from './board';\r\nimport Header from './layout/header';\r\nimport Tool from './tools/tool';\r\nimport ImagePanel from './panels/imagePanel';\r\nimport './style.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport TextPanel from './panels/textPanel';\r\nimport Sidebar from './layout/sidebar';\r\nimport React from 'react';\r\nimport PanelTextEdit from './panels/text/panel-text-edit';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"bg-gray-100 h-full\">\r\n      <Header />\r\n      <div className=\"flex\" style={{ height: 'calc(100vh - 49px)' }}>\r\n        <Sidebar/>\r\n        <div className=\"w-72 border-r bg-white p-3\">\r\n          <Switch>\r\n            <Route exact path=\"/text/edit\">\r\n              <PanelTextEdit />\r\n            </Route>\r\n            <Route exact path=\"/text\">\r\n              <TextPanel/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <ImagePanel />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <div className=\"flex-grow\">\r\n          <Tool />\r\n          <div className=\"flex items-center justify-center\" style={{ height: 'calc(100% - 48px)' }}>\r\n            <Board />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport rootReducer from './storages/rootReducers';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}