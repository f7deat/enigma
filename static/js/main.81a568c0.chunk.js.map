{"version":3,"sources":["storages/actions/transformAction.tsx","storages/types/imageType.tsx","storages/reducers/imageReducer.tsx","storages/reducers/textReducer.tsx","storages/reducers/transformReducer.tsx","storages/rootReducers.tsx","storages/store.tsx","board.tsx","components/modals/basic-modal.tsx","layout/header.tsx","modals/crop.tsx","tools/tool.tsx","panels/imagePanel.tsx","storages/actions/imageAction.tsx","panels/textPanel.tsx","storages/actions/textAction.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["setTransformNode","payload","type","SET_IMAGE","initialState","image","imageReducer","state","action","text","nodes","textReducer","node","TransformReducer","rootReducer","combineReducers","store","createStore","Board","useState","shape","setShape","imageHtmlElement","setImageHtmlElement","textNode","setTextNode","subscribe","getState","Object","keys","length","width","height","className","onMouseDown","e","target","getStage","dispatch","x","y","draggable","onClick","map","BasicModal","props","visible","title","onCanel","style","children","Header","visibleNewProject","setVisibleNewProject","console","log","Crop","setImage","currentSrc","isShowCrop","setIsShowCrop","src","alt","Tool","icon","Item","ImagePanel","images","setImages","handleClickImage","file","currentTarget","htmlFor","hidden","accept","id","onChange","url","files","list","URL","createObjectURL","value","Math","floor","random","TextPanel","handleNodeClick","handleTextClick","ownerDocument","defaultView","getComputedStyle","innerText","fontSize","Number","match","fontFamily","fontStyle","fontWeight","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81a568c0.chunk.js","sourcesContent":["export const setTransformNode = (payload: any) => {\r\n    return {\r\n        type: 'SET_TRANSFORM_NODE',\r\n        payload: payload\r\n    }\r\n}","export const SELECT_IMAGE = 'SELECT_IMAGE'\r\nexport const GET_IMAGE = 'GET_IMAGE'\r\nexport const SET_IMAGE = 'SET_IMAGE'\r\n\r\nexport interface ImageAction {\r\n    type: typeof SET_IMAGE,\r\n    payload: string\r\n}","import { ImageAction, SET_IMAGE } from \"../types/imageType\"\r\n\r\nconst initialState = {\r\n    image: null\r\n}\r\n\r\nconst imageReducer = (state = initialState, action: ImageAction): any => {\r\n    switch (action.type) {\r\n        case SET_IMAGE: {\r\n            return {\r\n                ...state,\r\n                image: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default imageReducer","const initialState: any = {\r\n    text: '',\r\n    nodes: []\r\n}\r\n\r\nconst textReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT': {\r\n            return {\r\n                ...state,\r\n                text: action.payload\r\n            }\r\n        }\r\n        case 'SET_TEXT_NODE': {\r\n            return {\r\n                ...state,\r\n                nodes: [...state.nodes, action.payload]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default textReducer","const initialState = {\r\n    node: {}\r\n}\r\n\r\nconst TransformReducer = (state = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        case 'SET_TRANSFORM_NODE': {\r\n            return {\r\n                ...state,\r\n                node: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default TransformReducer","import { combineReducers } from \"redux\";\r\nimport imageReducer from \"./reducers/imageReducer\";\r\nimport textReducer from \"./reducers/textReducer\";\r\nimport TransformReducer from \"./reducers/transformReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    imageReducer,\r\n    textReducer,\r\n    TransformReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducers\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import Konva from \"konva\";\r\nimport React, { useState } from \"react\";\r\nimport { Layer, Stage, Transformer, Image } from \"react-konva\";\r\nimport { setTransformNode } from \"./storages/actions/transformAction\";\r\nimport store from \"./storages/store\";\r\n\r\nexport default function Board() {\r\n    const [shape, setShape] = useState<any>()\r\n    const [imageHtmlElement, setImageHtmlElement] = useState<HTMLImageElement>();\r\n    const [textNode, setTextNode] = useState<any>([]);\r\n    const handleClick = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        store.dispatch(setTransformNode(e.target))\r\n    }\r\n\r\n    const handleDeselect = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty) {\r\n            store.dispatch(setTransformNode({}));\r\n            setShape(null)\r\n          }\r\n    }\r\n\r\n    store.subscribe(() => {\r\n        setImageHtmlElement(store.getState().imageReducer.image);\r\n        setTextNode(store.getState().textReducer.nodes);\r\n        if (Object.keys(store.getState().TransformReducer.node).length > 0) {\r\n            setShape(store.getState().TransformReducer.node);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Stage width={500} height={500} className=\"bg-white border border-blue-500\" onMouseDown={handleDeselect}>\r\n            <Layer>\r\n                {\r\n                    imageHtmlElement && <Image image={imageHtmlElement} x={100} y={100} draggable onClick={handleClick} />\r\n                }\r\n                {\r\n                    shape && <Transformer node={shape} />\r\n                }\r\n                {\r\n                    textNode && textNode.map((x: any) => (x))\r\n                }\r\n            </Layer>\r\n        </Stage>\r\n    )\r\n}","interface IModalProps {\r\n  visible: boolean;\r\n  onCanel: any;\r\n  title: string;\r\n}\r\n\r\nconst BasicModal: React.FunctionComponent<IModalProps> = (props) => {\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.visible\r\n          ? \"flex justify-center items-center h-screen w-screen absolute top-0 left-0\"\r\n          : \"hidden\"\r\n      }`}\r\n    >\r\n      <div className=\"w-screen h-screen bg-gray-500 opacity-50 absolute z-10 top-0 left-0\"></div>\r\n      <div className=\"h-3/4 w-1/2 bg-white absolute z-20 rounded shadow-lg\">\r\n        <div className=\"flex justify-between items-center px-3 py-1 text-gray-800\">\r\n          <div className=\"font-bold\">{props.title}</div>\r\n          <button\r\n            className=\"p-2 transition duration-300 ease-in-out transform hover:rotate-90\"\r\n            onClick={props.onCanel}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"h-full\" style={{height: 'calc(100% - 48px)'}}>{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicModal;\r\n","import { useState } from \"react\";\r\nimport BasicModal from \"../components/modals/basic-modal\";\r\nimport store from \"../storages/store\";\r\n\r\nexport default function Header() {\r\n    const [visibleNewProject, setVisibleNewProject] = useState(false)\r\n    const handlePreview = () => {\r\n    console.log(store.getState());\r\n    };\r\n  return (\r\n    <div>\r\n      <div className=\"border-b bg-white flex items-center\">\r\n        <div className=\"px-4 py-3 flex-grow\">\r\n          <button type=\"button\" className=\"px-2\">\r\n            <i className=\"fas fa-bars\"></i>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-2 font-medium hover:text-blue-700\"\r\n            onClick={() => setVisibleNewProject(true)}\r\n          >\r\n            New Design\r\n          </button>\r\n        </div>\r\n        <div className=\"px-2\">\r\n          <button\r\n            className=\"px-4 py-1 rounded bg-blue-500 hover:bg-blue-600 text-white font-bold\"\r\n            onClick={handlePreview}\r\n          >\r\n            <i className=\"fas fa-eye mr-2\"></i>Preview\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <BasicModal title=\"Start new design\" visible={visibleNewProject} onCanel={() => setVisibleNewProject(false)}>\r\n          <div className=\"flex h-full border-t\">\r\n              <div className=\"w-1/4 bg-gray-100 h-full\">\r\n                  <div className=\"py-2 px-3 hover:bg-gray-200 font-medium cursor-pointer\"><i className=\"fas fa-award mr-2\"></i>Recommendation</div>\r\n                  <div className=\"py-2 px-3 hover:bg-blue-200 font-medium cursor-pointer\"><i className=\"fab fa-facebook text-blue-600 mr-2\"></i>Facebook</div>\r\n                  <div className=\"py-2 px-3 hover:bg-purple-200 font-medium cursor-pointer\"><i className=\"fab fa-instagram text-purple-600 mr-2\"></i>Instagram</div>\r\n                  <div className=\"py-2 px-3 hover:bg-red-200 font-medium cursor-pointer\"><i className=\"fab fa-accusoft text-red-600 mr-2\"></i>Custom</div>\r\n              </div>\r\n              <div className=\"w-3/4 h-full\"></div>\r\n          </div>\r\n      </BasicModal>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\"\r\nimport store from \"../storages/store\"\r\n\r\nexport default function Crop(props: any) {\r\n\r\n    const [image, setImage] = useState('')\r\n\r\n    function handleUndo() {\r\n\r\n    }\r\n\r\n    store.subscribe(() => {\r\n        if (!store.getState().imageReducer.image) {\r\n            return;\r\n        }\r\n        setImage(store.getState().imageReducer.image.currentSrc)\r\n    })\r\n\r\n    return (\r\n        <div className={`${props.isShowCrop ? 'flex justify-center items-center h-screen w-screen absolute top-0 left-0' : 'hidden'}`}>\r\n            <div className=\"w-screen h-screen bg-gray-500 opacity-50 absolute z-10 top-0 left-0\"></div>\r\n            <div className=\"h-3/4 w-1/2 bg-white absolute z-20 rounded shadow-lg\">\r\n                <div className=\"flex justify-between items-center px-3 pt-2 text-gray-600\">\r\n                    <div className=\"font-bold\">\r\n                        CROP IMAGE\r\n                    </div>\r\n                    <button className=\"p-2 transition duration-300 ease-in-out transform hover:rotate-90\" onClick={() => props.setIsShowCrop(false)}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"px-2 h-full\">\r\n                    <div className=\"border border-gray-200 rounded\" style={{ height: 'calc(100% - 150px)' }}>\r\n                        <div className=\"bg-gray-100 rounded p-2 text-sm text-gray-600\">\r\n                            <button onClick={() => handleUndo()}><i className=\"fas fa-undo px-2\"></i></button>\r\n                            <button><i className=\"fas fa-redo px-2\"></i></button>\r\n                        </div>\r\n                        <div className=\"p-4 flex justify-center\" style={{height: 'calc(100% - 36px)'}}>\r\n                            { <img src={image} alt=\"\"/> }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-right mt-4\">\r\n                        <button className=\"text-gray-600 rounded font-medium px-6 py-2 mr-2 hover:text-gray-700\" onClick={() => props.setIsShowCrop(false)}>Cancel</button>\r\n                        <button className=\"bg-blue-500 text-white rounded font-medium px-6 py-2 hover:bg-blue-600\"><i className=\"fas fa-crop\"></i> Crop</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport Crop from \"../modals/crop\"\r\n\r\nexport default function Tool() {\r\n\r\n    const [isShowCrop, setIsShowCrop] = useState(false)\r\n\r\n    const handleCropClick = () => {\r\n        setIsShowCrop(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Crop isShowCrop={isShowCrop} setIsShowCrop={setIsShowCrop}/>\r\n            <div className=\"flex text-gray-700\">\r\n                <div className=\"flex text-sm flex-grow\">\r\n                    <Item icon=\"fas fa-undo\" />\r\n                    <Item icon=\"fas fa-redo\" />\r\n                    <div className=\"pl-4 py-3 text-gray-600 hover:text-gray-700 cursor-pointer\" onClick={handleCropClick}>\r\n                        <i className=\"fas fa-crop\"></i>\r\n                    </div>\r\n                    <Item icon=\"fas fa-fill-drip\" />\r\n                </div>\r\n                <div className=\"flex text-sm\">\r\n                    <div className=\"pr-4 py-3 text-gray-400\">\r\n                        <i className=\"fas fa-search-plus\"></i>\r\n                    </div>\r\n                    <div className=\"pr-4 py-3 text-gray-400\">\r\n                        <i className=\"fas fa-search-minus\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Item = (props: any) => {\r\n    return (\r\n        <div className=\"pl-4 py-3 text-gray-400\">\r\n            <i className={props.icon}></i>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { setImageStore } from \"../storages/actions/imageAction\"\r\nimport store from \"../storages/store\"\r\n\r\nexport default function ImagePanel() {\r\n\r\n    const [images, setImages] = useState<string[]>([])\r\n\r\n    const handleUpload = (e: any) => {\r\n        let url = e.currentTarget.files[0]\r\n        let list = [...images, URL.createObjectURL(url)]\r\n        setImages(list)\r\n    }\r\n\r\n    const handleClickImage = (e: any) => {\r\n        store.dispatch(setImageStore(e.currentTarget))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold text-xl text-gray-700 mb-3\">Photo</div>\r\n            <label className=\"bg-blue-500 text-white block p-2 text-center font-bold cursor-pointer hover:bg-blue-600 shadow rounded\" htmlFor=\"image\">\r\n                <input type=\"file\" hidden accept=\"image/*\" id=\"image\" onChange={handleUpload} />\r\n                <i className=\"fas fa-cloud-upload-alt mr-2\"></i> Upload\r\n            </label>\r\n            <div className=\"overflow-auto mt-1\" style={{height: 'calc(100vh - 150px)'}}>\r\n            {\r\n                images && (\r\n                    images.map((value) => (\r\n                        <div className=\"mb-2\" key={Math.floor(Math.random() * 100)}>\r\n                            <img src={value} alt=\"\" onClick={handleClickImage}/>\r\n                        </div>\r\n                    ))\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ImageAction, SET_IMAGE } from \"../types/imageType\"\r\n\r\nexport const setImageStore = (file: any): ImageAction => {\r\n    return {\r\n        type: SET_IMAGE,\r\n        payload: file\r\n    }\r\n}","import { setTextNode } from \"../storages/actions/textAction\";\r\nimport store from \"../storages/store\";\r\nimport { Text } from \"react-konva\";\r\nimport Konva from \"konva\";\r\nimport { setTransformNode } from \"../storages/actions/transformAction\";\r\n\r\nconst TextPanel = () => {\r\n\r\n    const handleNodeClick = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n        store.dispatch(setTransformNode(e.target))\r\n    }\r\n\r\n    const handleTextClick = (e: any) => {\r\n        let style = e.target.ownerDocument.defaultView.getComputedStyle(e.target, null);\r\n        let text = <Text text={e.target.innerText} draggable key={Math.floor(Math.random() *100)}\r\n            fontSize={Number(style.fontSize.match(/\\d+/)[0])}\r\n            fontFamily={style.fontFamily}\r\n            fontStyle={`${style.fontStyle} ${style.fontWeight}`}\r\n            onClick={handleNodeClick}\r\n            />\r\n        store.dispatch(setTextNode(text))\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"font-bold text-xl text-gray-700 mb-3\">Text</div>\r\n            <div className=\"p-2 text-xl\">\r\n                <div className=\"mb-2\">\r\n                    <button className=\"font-bold\" onClick={handleTextClick}>Bold</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button className=\"font-bold italic\" onClick={handleTextClick}>Bold Italic</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button onClick={handleTextClick}>Normal</button>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <button onClick={handleTextClick} className=\"italic\">Normal Italic</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextPanel","export const setTextAction = (text: string): any => {\r\n    return {\r\n        type: 'SET_TEXT',\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const setNodeAction = (text: any): any => {\r\n    return {\r\n        type: 'SET_TEXT_NODE',\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const setTextNode = (payload: any): any => {\r\n    return {\r\n        type: 'SET_TEXT_NODE',\r\n        payload: payload\r\n    }\r\n}","import Board from './board';\nimport Header from './layout/header';\nimport Tool from './tools/tool';\nimport ImagePanel from './panels/imagePanel';\nimport './style.css';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport React from 'react';\nimport TextPanel from './panels/textPanel';\n\nfunction App() {\n  return (\n    <div className=\"bg-gray-100 h-full\">\n      <Header />\n      <div className=\"flex\" style={{ height: 'calc(100vh - 49px)' }}>\n        <div className=\"bg-gray-800 w-16 h-full flex-col\">\n          <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\n            <Link to=\"/\"><i className=\"fas fa-image text-2xl\"></i></Link>\n          </div>\n          <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\n            <i className=\"fas fa-disease text-2xl\"></i>\n          </div>\n          <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\n            <i className=\"fas fa-paragraph text-2xl\"></i>\n          </div>\n          <div className=\"text-white w-full h-16 flex justify-center items-center hover:bg-gray-900 cursor-pointer\">\n            <Link to=\"/text\"><i className=\"fab fa-autoprefixer text-2xl\"></i></Link>\n          </div>\n        </div>\n        <div className=\"w-72 border-r bg-white p-3\">\n          <Switch>\n            <Route exact path=\"/text\">\n              <TextPanel/>\n            </Route>\n            <Route exact path=\"/\">\n              <ImagePanel />\n            </Route>\n          </Switch>\n        </div>\n        <div className=\"flex-grow\">\n          <Tool />\n          <div className=\"flex items-center justify-center\" style={{ height: 'calc(100% - 48px)' }}>\n            <Board />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}